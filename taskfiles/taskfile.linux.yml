version: '3'

tasks:

  default:
    internal: true
    desc: Default
    cmds:
      - |
        echo "Working dir: {{.USER_WORKING_DIR}}"
        echo "OS: {{OS}}"
        task --list
    silent: true

  assert:
    cmds:
      - for:
          var: REQUIRED_TOOLS
          split: ','
          as: TOOL
        cmd: |
          [ -n "$(which {{ .TOOL }})" ] || ( \
            echo "ERROR: `{{ .TOOL }}` not found" && exit 1; \
          )
    silent: true
    internal: true
    vars:
      REQUIRED_TOOLS: pacman, yay

  # TODO: find a way to ask before every step
  # TODO: figure out the order of execution and how to call it from here
  setup:
    deps: [assert]
    internal: true
    desc: Install linux
    platforms: [linux]
    cmds:
      - task: base
      - task: yay
      - task: wifibluetooth
      - task: audio
      - task: config
      - task: dev
      - task: :sdkman:setup
      - task: :python:setup
      - task: productivity
      - task: keyboard
      - task: mouse
      - task: :submodules:init
      - task: :zimfw:install
      - task: :zsh:shell

  update:
    deps: [assert]
    desc: Run update tasks
    platforms: [linux]
    cmds:
      - yay -Syu --noconfirm
      - task: :zimfw:refresh

  k2:
    desc: Enable keychron fn keys
    platforms: [linux]
    cmds:
      - sudo systemctl start keychron

  base:
    deps: [assert]
    internal: true
    desc: Install development packages
    platforms: [linux]
    cmds:
      - "{{.ROOT_DIR}}/installation/linux/01-base.sh"

  yay:
    internal: true
    desc: Install development packages
    platforms: [linux]
    status:
      - test -f "{{.YAY_BIN}}"
    cmds:
      - mkdir -p ~/foundry/depository
      - "{{.ROOT_DIR}}/installation/linux/02-yay.sh"
    vars:
      YAY_BIN:
        sh: which yay || true

  wifibluetooth:
    deps: [assert]
    internal: true
    desc: Install development packages
    platforms: [linux]
    cmds:
      - "{{.ROOT_DIR}}/installation/linux/04-wireless-bluetooth.sh"

  audio:
    deps: [assert]
    internal: true
    desc: Install development packages
    platforms: [linux]
    cmds:
      - "{{.ROOT_DIR}}/installation/linux/05-audio.sh"

  productivity:
    deps: [assert]
    internal: true
    desc: Install development packages
    platforms: [linux]
    cmds:
      - "{{.ROOT_DIR}}/installation/linux/07-productivity.sh"

  config:
    deps: [assert]
    internal: true
    desc: Install development packages
    platforms: [linux]
    vars:
      CONFIG: "{{.HOME}}/.config"
      EXTRAS: "{{.ROOT_DIR}}/installation/linux/extras"
    cmds:
      - mkdir -p "{{.CONFIG}}/gtk-3.0"
      - mkdir -p "{{.HOME}}/.local/bin"
      - rm -rf "{{.CONFIG}}/mimeapps.list"
      - cp "{{.EXTRAS}}/mimeapps.list" "{{.CONFIG}}"
      - rm -rf "{{.HOME}}/user-dirs"
      - cp "{{.EXTRAS}}/user-dirs.dirs" "{{.CONFIG}}"

  dev:
    deps: [assert]
    internal: true
    desc: Install development packages
    platforms: [linux]
    cmds:
      - "{{.ROOT_DIR}}/installation/linux/23-development.sh"

  keyboard:
    deps: [assert]
    internal: true
    desc: Install development packages
    platforms: [linux]
    cmds:
      - "{{.ROOT_DIR}}/installation/linux/31-keyboard.sh"

  mouse:
    deps: [assert]
    internal: true
    desc: Install development packages
    platforms: [linux]
    status:
      - test -f "{{.LOGID_BIN}}"
    cmds:
      - "{{.ROOT_DIR}}/installation/linux/32-mouse.sh"
    vars:
      LOGID_BIN:
        sh: which logid || true

  games:
    deps: [assert]
    internal: true
    desc: Install development packages
    platforms: [linux]
    cmds:
      - "{{.ROOT_DIR}}/installation/linux/53-gaming.sh"

  awesome:
    deps: [assert]
    desc: Install linux
    platforms: [linux]
    cmds:
      - task: setup
      - task: awesome-setup
      - task: :stow:awesome

  awesome-setup:
    deps: [assert]
    internal: true
    desc: Install awesome packages
    platforms: [linux]
    cmds:
      - cmd: "{{.ROOT_DIR}}/installation/linux/50-awesomewm.sh"
        ignore_error: true

  qtile:
    deps: [assert]
    desc: Install linux
    platforms: [linux]
    cmds:
      - task: setup
      - "{{.ROOT_DIR}}/installation/linux/51-qtile.sh"
      - task: :stow:qtile

  gnome:
    deps: [assert]
    desc: Install linux
    platforms: [linux]
    cmds:
      - task: setup
      - "{{.ROOT_DIR}}/installation/linux/52-gnome.sh"
      - task: :stow:gnome
      - task: games
